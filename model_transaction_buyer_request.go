/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TransactionBuyerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionBuyerRequest{}

// TransactionBuyerRequest Guest buyer details.
type TransactionBuyerRequest struct {
	// An external identifier that can be used to match the buyer against your own records. This value needs to be unique for all buyers.
	ExternalIdentifier NullableString `json:"external_identifier,omitempty"`
	// A unique name for this buyer which is used in the Gr4vy admin panel to give a buyer a human readable name.
	DisplayName NullableString `json:"display_name,omitempty"`
	// The optional billing details for the a buyer.
	BillingDetails NullableBillingDetailsRequest `json:"billing_details,omitempty"`
	// The optional shipping details for the buyer.
	ShippingDetails NullableBillingDetailsRequest `json:"shipping_details,omitempty"`
}

// NewTransactionBuyerRequest instantiates a new TransactionBuyerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionBuyerRequest() *TransactionBuyerRequest {
	this := TransactionBuyerRequest{}
	return &this
}

// NewTransactionBuyerRequestWithDefaults instantiates a new TransactionBuyerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionBuyerRequestWithDefaults() *TransactionBuyerRequest {
	this := TransactionBuyerRequest{}
	return &this
}

// GetExternalIdentifier returns the ExternalIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionBuyerRequest) GetExternalIdentifier() string {
	if o == nil || IsNil(o.ExternalIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalIdentifier.Get()
}

// GetExternalIdentifierOk returns a tuple with the ExternalIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionBuyerRequest) GetExternalIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalIdentifier.Get(), o.ExternalIdentifier.IsSet()
}

// HasExternalIdentifier returns a boolean if a field has been set.
func (o *TransactionBuyerRequest) HasExternalIdentifier() bool {
	if o != nil && o.ExternalIdentifier.IsSet() {
		return true
	}

	return false
}

// SetExternalIdentifier gets a reference to the given NullableString and assigns it to the ExternalIdentifier field.
func (o *TransactionBuyerRequest) SetExternalIdentifier(v string) {
	o.ExternalIdentifier.Set(&v)
}
// SetExternalIdentifierNil sets the value for ExternalIdentifier to be an explicit nil
func (o *TransactionBuyerRequest) SetExternalIdentifierNil() {
	o.ExternalIdentifier.Set(nil)
}

// UnsetExternalIdentifier ensures that no value is present for ExternalIdentifier, not even an explicit nil
func (o *TransactionBuyerRequest) UnsetExternalIdentifier() {
	o.ExternalIdentifier.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionBuyerRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionBuyerRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *TransactionBuyerRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *TransactionBuyerRequest) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *TransactionBuyerRequest) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *TransactionBuyerRequest) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetBillingDetails returns the BillingDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionBuyerRequest) GetBillingDetails() BillingDetailsRequest {
	if o == nil || IsNil(o.BillingDetails.Get()) {
		var ret BillingDetailsRequest
		return ret
	}
	return *o.BillingDetails.Get()
}

// GetBillingDetailsOk returns a tuple with the BillingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionBuyerRequest) GetBillingDetailsOk() (*BillingDetailsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingDetails.Get(), o.BillingDetails.IsSet()
}

// HasBillingDetails returns a boolean if a field has been set.
func (o *TransactionBuyerRequest) HasBillingDetails() bool {
	if o != nil && o.BillingDetails.IsSet() {
		return true
	}

	return false
}

// SetBillingDetails gets a reference to the given NullableBillingDetailsRequest and assigns it to the BillingDetails field.
func (o *TransactionBuyerRequest) SetBillingDetails(v BillingDetailsRequest) {
	o.BillingDetails.Set(&v)
}
// SetBillingDetailsNil sets the value for BillingDetails to be an explicit nil
func (o *TransactionBuyerRequest) SetBillingDetailsNil() {
	o.BillingDetails.Set(nil)
}

// UnsetBillingDetails ensures that no value is present for BillingDetails, not even an explicit nil
func (o *TransactionBuyerRequest) UnsetBillingDetails() {
	o.BillingDetails.Unset()
}

// GetShippingDetails returns the ShippingDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionBuyerRequest) GetShippingDetails() BillingDetailsRequest {
	if o == nil || IsNil(o.ShippingDetails.Get()) {
		var ret BillingDetailsRequest
		return ret
	}
	return *o.ShippingDetails.Get()
}

// GetShippingDetailsOk returns a tuple with the ShippingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionBuyerRequest) GetShippingDetailsOk() (*BillingDetailsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingDetails.Get(), o.ShippingDetails.IsSet()
}

// HasShippingDetails returns a boolean if a field has been set.
func (o *TransactionBuyerRequest) HasShippingDetails() bool {
	if o != nil && o.ShippingDetails.IsSet() {
		return true
	}

	return false
}

// SetShippingDetails gets a reference to the given NullableBillingDetailsRequest and assigns it to the ShippingDetails field.
func (o *TransactionBuyerRequest) SetShippingDetails(v BillingDetailsRequest) {
	o.ShippingDetails.Set(&v)
}
// SetShippingDetailsNil sets the value for ShippingDetails to be an explicit nil
func (o *TransactionBuyerRequest) SetShippingDetailsNil() {
	o.ShippingDetails.Set(nil)
}

// UnsetShippingDetails ensures that no value is present for ShippingDetails, not even an explicit nil
func (o *TransactionBuyerRequest) UnsetShippingDetails() {
	o.ShippingDetails.Unset()
}

func (o TransactionBuyerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionBuyerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalIdentifier.IsSet() {
		toSerialize["external_identifier"] = o.ExternalIdentifier.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["display_name"] = o.DisplayName.Get()
	}
	if o.BillingDetails.IsSet() {
		toSerialize["billing_details"] = o.BillingDetails.Get()
	}
	if o.ShippingDetails.IsSet() {
		toSerialize["shipping_details"] = o.ShippingDetails.Get()
	}
	return toSerialize, nil
}

type NullableTransactionBuyerRequest struct {
	value *TransactionBuyerRequest
	isSet bool
}

func (v NullableTransactionBuyerRequest) Get() *TransactionBuyerRequest {
	return v.value
}

func (v *NullableTransactionBuyerRequest) Set(val *TransactionBuyerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionBuyerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionBuyerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionBuyerRequest(val *TransactionBuyerRequest) *NullableTransactionBuyerRequest {
	return &NullableTransactionBuyerRequest{value: val, isSet: true}
}

func (v NullableTransactionBuyerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionBuyerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


