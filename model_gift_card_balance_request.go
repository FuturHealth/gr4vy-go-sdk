/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GiftCardBalanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GiftCardBalanceRequest{}

// GiftCardBalanceRequest Check the balance for a stored/new gift card.
type GiftCardBalanceRequest struct {
	// The ID of the gift card to check a balance for. Required if `number` is not set.
	Id *string `json:"id,omitempty"`
	// The 16-19 digit number for this gift card. Required if `id` is not set.
	Number *string `json:"number,omitempty" validate:"regexp=^[0-9]{16,19}$"`
	// The PIN for this gift card. Required if `number` is set.
	Pin *string `json:"pin,omitempty"`
}

// NewGiftCardBalanceRequest instantiates a new GiftCardBalanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardBalanceRequest() *GiftCardBalanceRequest {
	this := GiftCardBalanceRequest{}
	return &this
}

// NewGiftCardBalanceRequestWithDefaults instantiates a new GiftCardBalanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardBalanceRequestWithDefaults() *GiftCardBalanceRequest {
	this := GiftCardBalanceRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GiftCardBalanceRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardBalanceRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GiftCardBalanceRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GiftCardBalanceRequest) SetId(v string) {
	o.Id = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *GiftCardBalanceRequest) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardBalanceRequest) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *GiftCardBalanceRequest) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *GiftCardBalanceRequest) SetNumber(v string) {
	o.Number = &v
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *GiftCardBalanceRequest) GetPin() string {
	if o == nil || IsNil(o.Pin) {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardBalanceRequest) GetPinOk() (*string, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *GiftCardBalanceRequest) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *GiftCardBalanceRequest) SetPin(v string) {
	o.Pin = &v
}

func (o GiftCardBalanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GiftCardBalanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Pin) {
		toSerialize["pin"] = o.Pin
	}
	return toSerialize, nil
}

type NullableGiftCardBalanceRequest struct {
	value *GiftCardBalanceRequest
	isSet bool
}

func (v NullableGiftCardBalanceRequest) Get() *GiftCardBalanceRequest {
	return v.value
}

func (v *NullableGiftCardBalanceRequest) Set(val *GiftCardBalanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardBalanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardBalanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardBalanceRequest(val *GiftCardBalanceRequest) *NullableGiftCardBalanceRequest {
	return &NullableGiftCardBalanceRequest{value: val, isSet: true}
}

func (v NullableGiftCardBalanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardBalanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


