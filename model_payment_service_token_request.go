/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentServiceTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServiceTokenRequest{}

// PaymentServiceTokenRequest Request body for provision a payment service token.
type PaymentServiceTokenRequest struct {
	// The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.  The security code can only be set if the stored payment method represents a card.
	SecurityCode NullableString `json:"security_code,omitempty" validate:"regexp=^\\\\d{3,4}$"`
	// The ID of the payment service.
	PaymentServiceId string `json:"payment_service_id"`
	// The redirect URL to redirect a buyer to after they have authorized their payment method. This only applies to payment methods that require buyer approval.
	RedirectUrl string `json:"redirect_url"`
}

type _PaymentServiceTokenRequest PaymentServiceTokenRequest

// NewPaymentServiceTokenRequest instantiates a new PaymentServiceTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServiceTokenRequest(paymentServiceId string, redirectUrl string) *PaymentServiceTokenRequest {
	this := PaymentServiceTokenRequest{}
	this.PaymentServiceId = paymentServiceId
	this.RedirectUrl = redirectUrl
	return &this
}

// NewPaymentServiceTokenRequestWithDefaults instantiates a new PaymentServiceTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceTokenRequestWithDefaults() *PaymentServiceTokenRequest {
	this := PaymentServiceTokenRequest{}
	return &this
}

// GetSecurityCode returns the SecurityCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentServiceTokenRequest) GetSecurityCode() string {
	if o == nil || IsNil(o.SecurityCode.Get()) {
		var ret string
		return ret
	}
	return *o.SecurityCode.Get()
}

// GetSecurityCodeOk returns a tuple with the SecurityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentServiceTokenRequest) GetSecurityCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityCode.Get(), o.SecurityCode.IsSet()
}

// HasSecurityCode returns a boolean if a field has been set.
func (o *PaymentServiceTokenRequest) HasSecurityCode() bool {
	if o != nil && o.SecurityCode.IsSet() {
		return true
	}

	return false
}

// SetSecurityCode gets a reference to the given NullableString and assigns it to the SecurityCode field.
func (o *PaymentServiceTokenRequest) SetSecurityCode(v string) {
	o.SecurityCode.Set(&v)
}
// SetSecurityCodeNil sets the value for SecurityCode to be an explicit nil
func (o *PaymentServiceTokenRequest) SetSecurityCodeNil() {
	o.SecurityCode.Set(nil)
}

// UnsetSecurityCode ensures that no value is present for SecurityCode, not even an explicit nil
func (o *PaymentServiceTokenRequest) UnsetSecurityCode() {
	o.SecurityCode.Unset()
}

// GetPaymentServiceId returns the PaymentServiceId field value
func (o *PaymentServiceTokenRequest) GetPaymentServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentServiceId
}

// GetPaymentServiceIdOk returns a tuple with the PaymentServiceId field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceTokenRequest) GetPaymentServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentServiceId, true
}

// SetPaymentServiceId sets field value
func (o *PaymentServiceTokenRequest) SetPaymentServiceId(v string) {
	o.PaymentServiceId = v
}

// GetRedirectUrl returns the RedirectUrl field value
func (o *PaymentServiceTokenRequest) GetRedirectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceTokenRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUrl, true
}

// SetRedirectUrl sets field value
func (o *PaymentServiceTokenRequest) SetRedirectUrl(v string) {
	o.RedirectUrl = v
}

func (o PaymentServiceTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServiceTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityCode.IsSet() {
		toSerialize["security_code"] = o.SecurityCode.Get()
	}
	toSerialize["payment_service_id"] = o.PaymentServiceId
	toSerialize["redirect_url"] = o.RedirectUrl
	return toSerialize, nil
}

func (o *PaymentServiceTokenRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_service_id",
		"redirect_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentServiceTokenRequest := _PaymentServiceTokenRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentServiceTokenRequest)

	if err != nil {
		return err
	}

	*o = PaymentServiceTokenRequest(varPaymentServiceTokenRequest)

	return err
}

type NullablePaymentServiceTokenRequest struct {
	value *PaymentServiceTokenRequest
	isSet bool
}

func (v NullablePaymentServiceTokenRequest) Get() *PaymentServiceTokenRequest {
	return v.value
}

func (v *NullablePaymentServiceTokenRequest) Set(val *PaymentServiceTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServiceTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServiceTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServiceTokenRequest(val *PaymentServiceTokenRequest) *NullablePaymentServiceTokenRequest {
	return &NullablePaymentServiceTokenRequest{value: val, isSet: true}
}

func (v NullablePaymentServiceTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServiceTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


