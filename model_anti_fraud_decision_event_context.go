/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AntiFraudDecisionEventContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AntiFraudDecisionEventContext{}

// AntiFraudDecisionEventContext Additional context for this event.
type AntiFraudDecisionEventContext struct {
	// The unique ID of the anti-fraud service used.
	AntiFraudServiceId *string `json:"anti_fraud_service_id,omitempty"`
	// The name of the anti-fraud service used.
	AntiFraudServiceName *string `json:"anti_fraud_service_name,omitempty"`
	// The anti-fraud service definition used.
	AntiFraudServiceDefinitionId *string `json:"anti_fraud_service_definition_id,omitempty"`
	// The external ID of the decision.
	AntiFraudServiceCheckId *string `json:"anti_fraud_service_check_id,omitempty"`
	// The HTTP body sent to fetch a decision.
	Request *string `json:"request,omitempty"`
	// The HTTP body received from the anti-fraud provider.
	Response *string `json:"response,omitempty"`
	// The HTTP response status code from the anti-fraud provider.
	ResponseStatusCode *float32 `json:"response_status_code,omitempty"`
	// The parsed decision response from the anti-fraud provider response.
	Decision *string `json:"decision,omitempty"`
}

// NewAntiFraudDecisionEventContext instantiates a new AntiFraudDecisionEventContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiFraudDecisionEventContext() *AntiFraudDecisionEventContext {
	this := AntiFraudDecisionEventContext{}
	return &this
}

// NewAntiFraudDecisionEventContextWithDefaults instantiates a new AntiFraudDecisionEventContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiFraudDecisionEventContextWithDefaults() *AntiFraudDecisionEventContext {
	this := AntiFraudDecisionEventContext{}
	return &this
}

// GetAntiFraudServiceId returns the AntiFraudServiceId field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceId() string {
	if o == nil || IsNil(o.AntiFraudServiceId) {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceId
}

// GetAntiFraudServiceIdOk returns a tuple with the AntiFraudServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AntiFraudServiceId) {
		return nil, false
	}
	return o.AntiFraudServiceId, true
}

// HasAntiFraudServiceId returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasAntiFraudServiceId() bool {
	if o != nil && !IsNil(o.AntiFraudServiceId) {
		return true
	}

	return false
}

// SetAntiFraudServiceId gets a reference to the given string and assigns it to the AntiFraudServiceId field.
func (o *AntiFraudDecisionEventContext) SetAntiFraudServiceId(v string) {
	o.AntiFraudServiceId = &v
}

// GetAntiFraudServiceName returns the AntiFraudServiceName field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceName() string {
	if o == nil || IsNil(o.AntiFraudServiceName) {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceName
}

// GetAntiFraudServiceNameOk returns a tuple with the AntiFraudServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.AntiFraudServiceName) {
		return nil, false
	}
	return o.AntiFraudServiceName, true
}

// HasAntiFraudServiceName returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasAntiFraudServiceName() bool {
	if o != nil && !IsNil(o.AntiFraudServiceName) {
		return true
	}

	return false
}

// SetAntiFraudServiceName gets a reference to the given string and assigns it to the AntiFraudServiceName field.
func (o *AntiFraudDecisionEventContext) SetAntiFraudServiceName(v string) {
	o.AntiFraudServiceName = &v
}

// GetAntiFraudServiceDefinitionId returns the AntiFraudServiceDefinitionId field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceDefinitionId() string {
	if o == nil || IsNil(o.AntiFraudServiceDefinitionId) {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceDefinitionId
}

// GetAntiFraudServiceDefinitionIdOk returns a tuple with the AntiFraudServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceDefinitionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AntiFraudServiceDefinitionId) {
		return nil, false
	}
	return o.AntiFraudServiceDefinitionId, true
}

// HasAntiFraudServiceDefinitionId returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasAntiFraudServiceDefinitionId() bool {
	if o != nil && !IsNil(o.AntiFraudServiceDefinitionId) {
		return true
	}

	return false
}

// SetAntiFraudServiceDefinitionId gets a reference to the given string and assigns it to the AntiFraudServiceDefinitionId field.
func (o *AntiFraudDecisionEventContext) SetAntiFraudServiceDefinitionId(v string) {
	o.AntiFraudServiceDefinitionId = &v
}

// GetAntiFraudServiceCheckId returns the AntiFraudServiceCheckId field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceCheckId() string {
	if o == nil || IsNil(o.AntiFraudServiceCheckId) {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceCheckId
}

// GetAntiFraudServiceCheckIdOk returns a tuple with the AntiFraudServiceCheckId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetAntiFraudServiceCheckIdOk() (*string, bool) {
	if o == nil || IsNil(o.AntiFraudServiceCheckId) {
		return nil, false
	}
	return o.AntiFraudServiceCheckId, true
}

// HasAntiFraudServiceCheckId returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasAntiFraudServiceCheckId() bool {
	if o != nil && !IsNil(o.AntiFraudServiceCheckId) {
		return true
	}

	return false
}

// SetAntiFraudServiceCheckId gets a reference to the given string and assigns it to the AntiFraudServiceCheckId field.
func (o *AntiFraudDecisionEventContext) SetAntiFraudServiceCheckId(v string) {
	o.AntiFraudServiceCheckId = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetRequest() string {
	if o == nil || IsNil(o.Request) {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetRequestOk() (*string, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *AntiFraudDecisionEventContext) SetRequest(v string) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetResponse() string {
	if o == nil || IsNil(o.Response) {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetResponseOk() (*string, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *AntiFraudDecisionEventContext) SetResponse(v string) {
	o.Response = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetResponseStatusCode() float32 {
	if o == nil || IsNil(o.ResponseStatusCode) {
		var ret float32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetResponseStatusCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.ResponseStatusCode) {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasResponseStatusCode() bool {
	if o != nil && !IsNil(o.ResponseStatusCode) {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given float32 and assigns it to the ResponseStatusCode field.
func (o *AntiFraudDecisionEventContext) SetResponseStatusCode(v float32) {
	o.ResponseStatusCode = &v
}

// GetDecision returns the Decision field value if set, zero value otherwise.
func (o *AntiFraudDecisionEventContext) GetDecision() string {
	if o == nil || IsNil(o.Decision) {
		var ret string
		return ret
	}
	return *o.Decision
}

// GetDecisionOk returns a tuple with the Decision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionEventContext) GetDecisionOk() (*string, bool) {
	if o == nil || IsNil(o.Decision) {
		return nil, false
	}
	return o.Decision, true
}

// HasDecision returns a boolean if a field has been set.
func (o *AntiFraudDecisionEventContext) HasDecision() bool {
	if o != nil && !IsNil(o.Decision) {
		return true
	}

	return false
}

// SetDecision gets a reference to the given string and assigns it to the Decision field.
func (o *AntiFraudDecisionEventContext) SetDecision(v string) {
	o.Decision = &v
}

func (o AntiFraudDecisionEventContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AntiFraudDecisionEventContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiFraudServiceId) {
		toSerialize["anti_fraud_service_id"] = o.AntiFraudServiceId
	}
	if !IsNil(o.AntiFraudServiceName) {
		toSerialize["anti_fraud_service_name"] = o.AntiFraudServiceName
	}
	if !IsNil(o.AntiFraudServiceDefinitionId) {
		toSerialize["anti_fraud_service_definition_id"] = o.AntiFraudServiceDefinitionId
	}
	if !IsNil(o.AntiFraudServiceCheckId) {
		toSerialize["anti_fraud_service_check_id"] = o.AntiFraudServiceCheckId
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	if !IsNil(o.ResponseStatusCode) {
		toSerialize["response_status_code"] = o.ResponseStatusCode
	}
	if !IsNil(o.Decision) {
		toSerialize["decision"] = o.Decision
	}
	return toSerialize, nil
}

type NullableAntiFraudDecisionEventContext struct {
	value *AntiFraudDecisionEventContext
	isSet bool
}

func (v NullableAntiFraudDecisionEventContext) Get() *AntiFraudDecisionEventContext {
	return v.value
}

func (v *NullableAntiFraudDecisionEventContext) Set(val *AntiFraudDecisionEventContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiFraudDecisionEventContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiFraudDecisionEventContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiFraudDecisionEventContext(val *AntiFraudDecisionEventContext) *NullableAntiFraudDecisionEventContext {
	return &NullableAntiFraudDecisionEventContext{value: val, isSet: true}
}

func (v NullableAntiFraudDecisionEventContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiFraudDecisionEventContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


