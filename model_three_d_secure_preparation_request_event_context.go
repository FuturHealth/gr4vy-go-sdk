/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ThreeDSecurePreparationRequestEventContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreeDSecurePreparationRequestEventContext{}

// ThreeDSecurePreparationRequestEventContext 3DS pre-authentication context.
type ThreeDSecurePreparationRequestEventContext struct {
	// The URL that was called for this request.
	Url *string `json:"url,omitempty"`
	// The request body sent to the `url`.
	Request *string `json:"request,omitempty"`
	// The response body received from the `url`.
	Response *string `json:"response,omitempty"`
	// The response status code received from the `url`.
	ResponseStatusCode *int32 `json:"response_status_code,omitempty"`
	// If the card is enrolled for 3DS.
	IsEnrolled *bool `json:"is_enrolled,omitempty"`
	// The version of 3DS extracted from the `response.
	Version *string `json:"version,omitempty"`
}

// NewThreeDSecurePreparationRequestEventContext instantiates a new ThreeDSecurePreparationRequestEventContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSecurePreparationRequestEventContext() *ThreeDSecurePreparationRequestEventContext {
	this := ThreeDSecurePreparationRequestEventContext{}
	return &this
}

// NewThreeDSecurePreparationRequestEventContextWithDefaults instantiates a new ThreeDSecurePreparationRequestEventContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSecurePreparationRequestEventContextWithDefaults() *ThreeDSecurePreparationRequestEventContext {
	this := ThreeDSecurePreparationRequestEventContext{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ThreeDSecurePreparationRequestEventContext) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecurePreparationRequestEventContext) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ThreeDSecurePreparationRequestEventContext) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ThreeDSecurePreparationRequestEventContext) SetUrl(v string) {
	o.Url = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ThreeDSecurePreparationRequestEventContext) GetRequest() string {
	if o == nil || IsNil(o.Request) {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecurePreparationRequestEventContext) GetRequestOk() (*string, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ThreeDSecurePreparationRequestEventContext) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *ThreeDSecurePreparationRequestEventContext) SetRequest(v string) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *ThreeDSecurePreparationRequestEventContext) GetResponse() string {
	if o == nil || IsNil(o.Response) {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecurePreparationRequestEventContext) GetResponseOk() (*string, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *ThreeDSecurePreparationRequestEventContext) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *ThreeDSecurePreparationRequestEventContext) SetResponse(v string) {
	o.Response = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *ThreeDSecurePreparationRequestEventContext) GetResponseStatusCode() int32 {
	if o == nil || IsNil(o.ResponseStatusCode) {
		var ret int32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecurePreparationRequestEventContext) GetResponseStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseStatusCode) {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *ThreeDSecurePreparationRequestEventContext) HasResponseStatusCode() bool {
	if o != nil && !IsNil(o.ResponseStatusCode) {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given int32 and assigns it to the ResponseStatusCode field.
func (o *ThreeDSecurePreparationRequestEventContext) SetResponseStatusCode(v int32) {
	o.ResponseStatusCode = &v
}

// GetIsEnrolled returns the IsEnrolled field value if set, zero value otherwise.
func (o *ThreeDSecurePreparationRequestEventContext) GetIsEnrolled() bool {
	if o == nil || IsNil(o.IsEnrolled) {
		var ret bool
		return ret
	}
	return *o.IsEnrolled
}

// GetIsEnrolledOk returns a tuple with the IsEnrolled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecurePreparationRequestEventContext) GetIsEnrolledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnrolled) {
		return nil, false
	}
	return o.IsEnrolled, true
}

// HasIsEnrolled returns a boolean if a field has been set.
func (o *ThreeDSecurePreparationRequestEventContext) HasIsEnrolled() bool {
	if o != nil && !IsNil(o.IsEnrolled) {
		return true
	}

	return false
}

// SetIsEnrolled gets a reference to the given bool and assigns it to the IsEnrolled field.
func (o *ThreeDSecurePreparationRequestEventContext) SetIsEnrolled(v bool) {
	o.IsEnrolled = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ThreeDSecurePreparationRequestEventContext) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecurePreparationRequestEventContext) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ThreeDSecurePreparationRequestEventContext) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ThreeDSecurePreparationRequestEventContext) SetVersion(v string) {
	o.Version = &v
}

func (o ThreeDSecurePreparationRequestEventContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreeDSecurePreparationRequestEventContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	if !IsNil(o.ResponseStatusCode) {
		toSerialize["response_status_code"] = o.ResponseStatusCode
	}
	if !IsNil(o.IsEnrolled) {
		toSerialize["is_enrolled"] = o.IsEnrolled
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableThreeDSecurePreparationRequestEventContext struct {
	value *ThreeDSecurePreparationRequestEventContext
	isSet bool
}

func (v NullableThreeDSecurePreparationRequestEventContext) Get() *ThreeDSecurePreparationRequestEventContext {
	return v.value
}

func (v *NullableThreeDSecurePreparationRequestEventContext) Set(val *ThreeDSecurePreparationRequestEventContext) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSecurePreparationRequestEventContext) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSecurePreparationRequestEventContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSecurePreparationRequestEventContext(val *ThreeDSecurePreparationRequestEventContext) *NullableThreeDSecurePreparationRequestEventContext {
	return &NullableThreeDSecurePreparationRequestEventContext{value: val, isSet: true}
}

func (v NullableThreeDSecurePreparationRequestEventContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSecurePreparationRequestEventContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


