/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GiftCardServiceCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GiftCardServiceCreateRequest{}

// GiftCardServiceCreateRequest Request body for activating a gift card service.
type GiftCardServiceCreateRequest struct {
	// The ID of the gift card service to use.
	GiftCardServiceDefinitionId string `json:"gift_card_service_definition_id"`
	// A custom name for the service. This will be shown in the Admin UI.
	DisplayName string `json:"display_name"`
	// A list of fields, each containing a key-value pair for each field defined by the definition for this gift card service.
	Fields []GiftCardServiceCreateRequestFieldsInner `json:"fields"`
	// Defines if this service is currently active or not.
	Active *bool `json:"active,omitempty"`
}

type _GiftCardServiceCreateRequest GiftCardServiceCreateRequest

// NewGiftCardServiceCreateRequest instantiates a new GiftCardServiceCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardServiceCreateRequest(giftCardServiceDefinitionId string, displayName string, fields []GiftCardServiceCreateRequestFieldsInner) *GiftCardServiceCreateRequest {
	this := GiftCardServiceCreateRequest{}
	this.GiftCardServiceDefinitionId = giftCardServiceDefinitionId
	this.DisplayName = displayName
	this.Fields = fields
	var active bool = true
	this.Active = &active
	return &this
}

// NewGiftCardServiceCreateRequestWithDefaults instantiates a new GiftCardServiceCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardServiceCreateRequestWithDefaults() *GiftCardServiceCreateRequest {
	this := GiftCardServiceCreateRequest{}
	var active bool = true
	this.Active = &active
	return &this
}

// GetGiftCardServiceDefinitionId returns the GiftCardServiceDefinitionId field value
func (o *GiftCardServiceCreateRequest) GetGiftCardServiceDefinitionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GiftCardServiceDefinitionId
}

// GetGiftCardServiceDefinitionIdOk returns a tuple with the GiftCardServiceDefinitionId field value
// and a boolean to check if the value has been set.
func (o *GiftCardServiceCreateRequest) GetGiftCardServiceDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GiftCardServiceDefinitionId, true
}

// SetGiftCardServiceDefinitionId sets field value
func (o *GiftCardServiceCreateRequest) SetGiftCardServiceDefinitionId(v string) {
	o.GiftCardServiceDefinitionId = v
}

// GetDisplayName returns the DisplayName field value
func (o *GiftCardServiceCreateRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *GiftCardServiceCreateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *GiftCardServiceCreateRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetFields returns the Fields field value
func (o *GiftCardServiceCreateRequest) GetFields() []GiftCardServiceCreateRequestFieldsInner {
	if o == nil {
		var ret []GiftCardServiceCreateRequestFieldsInner
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *GiftCardServiceCreateRequest) GetFieldsOk() ([]GiftCardServiceCreateRequestFieldsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *GiftCardServiceCreateRequest) SetFields(v []GiftCardServiceCreateRequestFieldsInner) {
	o.Fields = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GiftCardServiceCreateRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceCreateRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GiftCardServiceCreateRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *GiftCardServiceCreateRequest) SetActive(v bool) {
	o.Active = &v
}

func (o GiftCardServiceCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GiftCardServiceCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gift_card_service_definition_id"] = o.GiftCardServiceDefinitionId
	toSerialize["display_name"] = o.DisplayName
	toSerialize["fields"] = o.Fields
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

func (o *GiftCardServiceCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"gift_card_service_definition_id",
		"display_name",
		"fields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGiftCardServiceCreateRequest := _GiftCardServiceCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGiftCardServiceCreateRequest)

	if err != nil {
		return err
	}

	*o = GiftCardServiceCreateRequest(varGiftCardServiceCreateRequest)

	return err
}

type NullableGiftCardServiceCreateRequest struct {
	value *GiftCardServiceCreateRequest
	isSet bool
}

func (v NullableGiftCardServiceCreateRequest) Get() *GiftCardServiceCreateRequest {
	return v.value
}

func (v *NullableGiftCardServiceCreateRequest) Set(val *GiftCardServiceCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardServiceCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardServiceCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardServiceCreateRequest(val *GiftCardServiceCreateRequest) *NullableGiftCardServiceCreateRequest {
	return &NullableGiftCardServiceCreateRequest{value: val, isSet: true}
}

func (v NullableGiftCardServiceCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardServiceCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


