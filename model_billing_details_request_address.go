/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingDetailsRequestAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingDetailsRequestAddress{}

// BillingDetailsRequestAddress The billing address for the buyer.
type BillingDetailsRequestAddress struct {
	// The city for the address.
	City NullableString `json:"city"`
	// The country for the address in ISO 3166 format.
	Country NullableString `json:"country"`
	// The postal code or zip code for the address.
	PostalCode NullableString `json:"postal_code"`
	// The state, county, or province for the address.
	State NullableString `json:"state"`
	// The code of state, county, or province for the address in ISO 3166-2 format.
	StateCode NullableString `json:"state_code,omitempty"`
	// The house number or name for the address. Not all payment services use this field but some do.
	HouseNumberOrName NullableString `json:"house_number_or_name,omitempty"`
	// The first line of the address.
	Line1 NullableString `json:"line1"`
	// The second line of the address.
	Line2 NullableString `json:"line2,omitempty"`
	// The optional name of the company or organisation to add to the address.
	Organization NullableString `json:"organization,omitempty"`
}

type _BillingDetailsRequestAddress BillingDetailsRequestAddress

// NewBillingDetailsRequestAddress instantiates a new BillingDetailsRequestAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingDetailsRequestAddress(city NullableString, country NullableString, postalCode NullableString, state NullableString, line1 NullableString) *BillingDetailsRequestAddress {
	this := BillingDetailsRequestAddress{}
	this.City = city
	this.Country = country
	this.PostalCode = postalCode
	this.State = state
	this.Line1 = line1
	return &this
}

// NewBillingDetailsRequestAddressWithDefaults instantiates a new BillingDetailsRequestAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingDetailsRequestAddressWithDefaults() *BillingDetailsRequestAddress {
	this := BillingDetailsRequestAddress{}
	return &this
}

// GetCity returns the City field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingDetailsRequestAddress) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}

	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// SetCity sets field value
func (o *BillingDetailsRequestAddress) SetCity(v string) {
	o.City.Set(&v)
}

// GetCountry returns the Country field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingDetailsRequestAddress) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}

	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// SetCountry sets field value
func (o *BillingDetailsRequestAddress) SetCountry(v string) {
	o.Country.Set(&v)
}

// GetPostalCode returns the PostalCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingDetailsRequestAddress) GetPostalCode() string {
	if o == nil || o.PostalCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// SetPostalCode sets field value
func (o *BillingDetailsRequestAddress) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}

// GetState returns the State field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingDetailsRequestAddress) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}

	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// SetState sets field value
func (o *BillingDetailsRequestAddress) SetState(v string) {
	o.State.Set(&v)
}

// GetStateCode returns the StateCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingDetailsRequestAddress) GetStateCode() string {
	if o == nil || IsNil(o.StateCode.Get()) {
		var ret string
		return ret
	}
	return *o.StateCode.Get()
}

// GetStateCodeOk returns a tuple with the StateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetStateCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateCode.Get(), o.StateCode.IsSet()
}

// HasStateCode returns a boolean if a field has been set.
func (o *BillingDetailsRequestAddress) HasStateCode() bool {
	if o != nil && o.StateCode.IsSet() {
		return true
	}

	return false
}

// SetStateCode gets a reference to the given NullableString and assigns it to the StateCode field.
func (o *BillingDetailsRequestAddress) SetStateCode(v string) {
	o.StateCode.Set(&v)
}
// SetStateCodeNil sets the value for StateCode to be an explicit nil
func (o *BillingDetailsRequestAddress) SetStateCodeNil() {
	o.StateCode.Set(nil)
}

// UnsetStateCode ensures that no value is present for StateCode, not even an explicit nil
func (o *BillingDetailsRequestAddress) UnsetStateCode() {
	o.StateCode.Unset()
}

// GetHouseNumberOrName returns the HouseNumberOrName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingDetailsRequestAddress) GetHouseNumberOrName() string {
	if o == nil || IsNil(o.HouseNumberOrName.Get()) {
		var ret string
		return ret
	}
	return *o.HouseNumberOrName.Get()
}

// GetHouseNumberOrNameOk returns a tuple with the HouseNumberOrName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetHouseNumberOrNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HouseNumberOrName.Get(), o.HouseNumberOrName.IsSet()
}

// HasHouseNumberOrName returns a boolean if a field has been set.
func (o *BillingDetailsRequestAddress) HasHouseNumberOrName() bool {
	if o != nil && o.HouseNumberOrName.IsSet() {
		return true
	}

	return false
}

// SetHouseNumberOrName gets a reference to the given NullableString and assigns it to the HouseNumberOrName field.
func (o *BillingDetailsRequestAddress) SetHouseNumberOrName(v string) {
	o.HouseNumberOrName.Set(&v)
}
// SetHouseNumberOrNameNil sets the value for HouseNumberOrName to be an explicit nil
func (o *BillingDetailsRequestAddress) SetHouseNumberOrNameNil() {
	o.HouseNumberOrName.Set(nil)
}

// UnsetHouseNumberOrName ensures that no value is present for HouseNumberOrName, not even an explicit nil
func (o *BillingDetailsRequestAddress) UnsetHouseNumberOrName() {
	o.HouseNumberOrName.Unset()
}

// GetLine1 returns the Line1 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingDetailsRequestAddress) GetLine1() string {
	if o == nil || o.Line1.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line1.Get()
}

// GetLine1Ok returns a tuple with the Line1 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line1.Get(), o.Line1.IsSet()
}

// SetLine1 sets field value
func (o *BillingDetailsRequestAddress) SetLine1(v string) {
	o.Line1.Set(&v)
}

// GetLine2 returns the Line2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingDetailsRequestAddress) GetLine2() string {
	if o == nil || IsNil(o.Line2.Get()) {
		var ret string
		return ret
	}
	return *o.Line2.Get()
}

// GetLine2Ok returns a tuple with the Line2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line2.Get(), o.Line2.IsSet()
}

// HasLine2 returns a boolean if a field has been set.
func (o *BillingDetailsRequestAddress) HasLine2() bool {
	if o != nil && o.Line2.IsSet() {
		return true
	}

	return false
}

// SetLine2 gets a reference to the given NullableString and assigns it to the Line2 field.
func (o *BillingDetailsRequestAddress) SetLine2(v string) {
	o.Line2.Set(&v)
}
// SetLine2Nil sets the value for Line2 to be an explicit nil
func (o *BillingDetailsRequestAddress) SetLine2Nil() {
	o.Line2.Set(nil)
}

// UnsetLine2 ensures that no value is present for Line2, not even an explicit nil
func (o *BillingDetailsRequestAddress) UnsetLine2() {
	o.Line2.Unset()
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingDetailsRequestAddress) GetOrganization() string {
	if o == nil || IsNil(o.Organization.Get()) {
		var ret string
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDetailsRequestAddress) GetOrganizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *BillingDetailsRequestAddress) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableString and assigns it to the Organization field.
func (o *BillingDetailsRequestAddress) SetOrganization(v string) {
	o.Organization.Set(&v)
}
// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *BillingDetailsRequestAddress) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *BillingDetailsRequestAddress) UnsetOrganization() {
	o.Organization.Unset()
}

func (o BillingDetailsRequestAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingDetailsRequestAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["city"] = o.City.Get()
	toSerialize["country"] = o.Country.Get()
	toSerialize["postal_code"] = o.PostalCode.Get()
	toSerialize["state"] = o.State.Get()
	if o.StateCode.IsSet() {
		toSerialize["state_code"] = o.StateCode.Get()
	}
	if o.HouseNumberOrName.IsSet() {
		toSerialize["house_number_or_name"] = o.HouseNumberOrName.Get()
	}
	toSerialize["line1"] = o.Line1.Get()
	if o.Line2.IsSet() {
		toSerialize["line2"] = o.Line2.Get()
	}
	if o.Organization.IsSet() {
		toSerialize["organization"] = o.Organization.Get()
	}
	return toSerialize, nil
}

func (o *BillingDetailsRequestAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"city",
		"country",
		"postal_code",
		"state",
		"line1",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingDetailsRequestAddress := _BillingDetailsRequestAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingDetailsRequestAddress)

	if err != nil {
		return err
	}

	*o = BillingDetailsRequestAddress(varBillingDetailsRequestAddress)

	return err
}

type NullableBillingDetailsRequestAddress struct {
	value *BillingDetailsRequestAddress
	isSet bool
}

func (v NullableBillingDetailsRequestAddress) Get() *BillingDetailsRequestAddress {
	return v.value
}

func (v *NullableBillingDetailsRequestAddress) Set(val *BillingDetailsRequestAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingDetailsRequestAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingDetailsRequestAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingDetailsRequestAddress(val *BillingDetailsRequestAddress) *NullableBillingDetailsRequestAddress {
	return &NullableBillingDetailsRequestAddress{value: val, isSet: true}
}

func (v NullableBillingDetailsRequestAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingDetailsRequestAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


