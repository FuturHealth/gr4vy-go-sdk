/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GiftCardRedemptionFailedContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GiftCardRedemptionFailedContext{}

// GiftCardRedemptionFailedContext Additional context for this event.
type GiftCardRedemptionFailedContext struct {
	// The unique ID of the Gift Card service used.
	GiftCardServiceId *string `json:"gift_card_service_id,omitempty"`
	// The name of the Gift Card service used.
	GiftCardServiceName *string `json:"gift_card_service_name,omitempty"`
	// The Gift Card service definition used.
	GiftCardServiceDefinitionId *string `json:"gift_card_service_definition_id,omitempty"`
	// The endpoint for the request, if performed.
	Url NullableString `json:"url,omitempty"`
	// The HTTP body sent to the Gift Card provider, if performed.
	Request NullableString `json:"request,omitempty"`
	// The HTTP body received from the Gift Card provider, if any.
	Response NullableString `json:"response,omitempty"`
	// The HTTP response status code from the Gift Card provider, if any.
	ResponseStatusCode NullableFloat32 `json:"response_status_code,omitempty"`
	// The reason we could not redeem the gift cards.
	Reason *string `json:"reason,omitempty"`
}

// NewGiftCardRedemptionFailedContext instantiates a new GiftCardRedemptionFailedContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardRedemptionFailedContext() *GiftCardRedemptionFailedContext {
	this := GiftCardRedemptionFailedContext{}
	return &this
}

// NewGiftCardRedemptionFailedContextWithDefaults instantiates a new GiftCardRedemptionFailedContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardRedemptionFailedContextWithDefaults() *GiftCardRedemptionFailedContext {
	this := GiftCardRedemptionFailedContext{}
	return &this
}

// GetGiftCardServiceId returns the GiftCardServiceId field value if set, zero value otherwise.
func (o *GiftCardRedemptionFailedContext) GetGiftCardServiceId() string {
	if o == nil || IsNil(o.GiftCardServiceId) {
		var ret string
		return ret
	}
	return *o.GiftCardServiceId
}

// GetGiftCardServiceIdOk returns a tuple with the GiftCardServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionFailedContext) GetGiftCardServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.GiftCardServiceId) {
		return nil, false
	}
	return o.GiftCardServiceId, true
}

// HasGiftCardServiceId returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasGiftCardServiceId() bool {
	if o != nil && !IsNil(o.GiftCardServiceId) {
		return true
	}

	return false
}

// SetGiftCardServiceId gets a reference to the given string and assigns it to the GiftCardServiceId field.
func (o *GiftCardRedemptionFailedContext) SetGiftCardServiceId(v string) {
	o.GiftCardServiceId = &v
}

// GetGiftCardServiceName returns the GiftCardServiceName field value if set, zero value otherwise.
func (o *GiftCardRedemptionFailedContext) GetGiftCardServiceName() string {
	if o == nil || IsNil(o.GiftCardServiceName) {
		var ret string
		return ret
	}
	return *o.GiftCardServiceName
}

// GetGiftCardServiceNameOk returns a tuple with the GiftCardServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionFailedContext) GetGiftCardServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.GiftCardServiceName) {
		return nil, false
	}
	return o.GiftCardServiceName, true
}

// HasGiftCardServiceName returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasGiftCardServiceName() bool {
	if o != nil && !IsNil(o.GiftCardServiceName) {
		return true
	}

	return false
}

// SetGiftCardServiceName gets a reference to the given string and assigns it to the GiftCardServiceName field.
func (o *GiftCardRedemptionFailedContext) SetGiftCardServiceName(v string) {
	o.GiftCardServiceName = &v
}

// GetGiftCardServiceDefinitionId returns the GiftCardServiceDefinitionId field value if set, zero value otherwise.
func (o *GiftCardRedemptionFailedContext) GetGiftCardServiceDefinitionId() string {
	if o == nil || IsNil(o.GiftCardServiceDefinitionId) {
		var ret string
		return ret
	}
	return *o.GiftCardServiceDefinitionId
}

// GetGiftCardServiceDefinitionIdOk returns a tuple with the GiftCardServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionFailedContext) GetGiftCardServiceDefinitionIdOk() (*string, bool) {
	if o == nil || IsNil(o.GiftCardServiceDefinitionId) {
		return nil, false
	}
	return o.GiftCardServiceDefinitionId, true
}

// HasGiftCardServiceDefinitionId returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasGiftCardServiceDefinitionId() bool {
	if o != nil && !IsNil(o.GiftCardServiceDefinitionId) {
		return true
	}

	return false
}

// SetGiftCardServiceDefinitionId gets a reference to the given string and assigns it to the GiftCardServiceDefinitionId field.
func (o *GiftCardRedemptionFailedContext) SetGiftCardServiceDefinitionId(v string) {
	o.GiftCardServiceDefinitionId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GiftCardRedemptionFailedContext) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GiftCardRedemptionFailedContext) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *GiftCardRedemptionFailedContext) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *GiftCardRedemptionFailedContext) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *GiftCardRedemptionFailedContext) UnsetUrl() {
	o.Url.Unset()
}

// GetRequest returns the Request field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GiftCardRedemptionFailedContext) GetRequest() string {
	if o == nil || IsNil(o.Request.Get()) {
		var ret string
		return ret
	}
	return *o.Request.Get()
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GiftCardRedemptionFailedContext) GetRequestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Request.Get(), o.Request.IsSet()
}

// HasRequest returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasRequest() bool {
	if o != nil && o.Request.IsSet() {
		return true
	}

	return false
}

// SetRequest gets a reference to the given NullableString and assigns it to the Request field.
func (o *GiftCardRedemptionFailedContext) SetRequest(v string) {
	o.Request.Set(&v)
}
// SetRequestNil sets the value for Request to be an explicit nil
func (o *GiftCardRedemptionFailedContext) SetRequestNil() {
	o.Request.Set(nil)
}

// UnsetRequest ensures that no value is present for Request, not even an explicit nil
func (o *GiftCardRedemptionFailedContext) UnsetRequest() {
	o.Request.Unset()
}

// GetResponse returns the Response field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GiftCardRedemptionFailedContext) GetResponse() string {
	if o == nil || IsNil(o.Response.Get()) {
		var ret string
		return ret
	}
	return *o.Response.Get()
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GiftCardRedemptionFailedContext) GetResponseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Response.Get(), o.Response.IsSet()
}

// HasResponse returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasResponse() bool {
	if o != nil && o.Response.IsSet() {
		return true
	}

	return false
}

// SetResponse gets a reference to the given NullableString and assigns it to the Response field.
func (o *GiftCardRedemptionFailedContext) SetResponse(v string) {
	o.Response.Set(&v)
}
// SetResponseNil sets the value for Response to be an explicit nil
func (o *GiftCardRedemptionFailedContext) SetResponseNil() {
	o.Response.Set(nil)
}

// UnsetResponse ensures that no value is present for Response, not even an explicit nil
func (o *GiftCardRedemptionFailedContext) UnsetResponse() {
	o.Response.Unset()
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GiftCardRedemptionFailedContext) GetResponseStatusCode() float32 {
	if o == nil || IsNil(o.ResponseStatusCode.Get()) {
		var ret float32
		return ret
	}
	return *o.ResponseStatusCode.Get()
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GiftCardRedemptionFailedContext) GetResponseStatusCodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseStatusCode.Get(), o.ResponseStatusCode.IsSet()
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode.IsSet() {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given NullableFloat32 and assigns it to the ResponseStatusCode field.
func (o *GiftCardRedemptionFailedContext) SetResponseStatusCode(v float32) {
	o.ResponseStatusCode.Set(&v)
}
// SetResponseStatusCodeNil sets the value for ResponseStatusCode to be an explicit nil
func (o *GiftCardRedemptionFailedContext) SetResponseStatusCodeNil() {
	o.ResponseStatusCode.Set(nil)
}

// UnsetResponseStatusCode ensures that no value is present for ResponseStatusCode, not even an explicit nil
func (o *GiftCardRedemptionFailedContext) UnsetResponseStatusCode() {
	o.ResponseStatusCode.Unset()
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *GiftCardRedemptionFailedContext) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionFailedContext) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *GiftCardRedemptionFailedContext) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *GiftCardRedemptionFailedContext) SetReason(v string) {
	o.Reason = &v
}

func (o GiftCardRedemptionFailedContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GiftCardRedemptionFailedContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GiftCardServiceId) {
		toSerialize["gift_card_service_id"] = o.GiftCardServiceId
	}
	if !IsNil(o.GiftCardServiceName) {
		toSerialize["gift_card_service_name"] = o.GiftCardServiceName
	}
	if !IsNil(o.GiftCardServiceDefinitionId) {
		toSerialize["gift_card_service_definition_id"] = o.GiftCardServiceDefinitionId
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Request.IsSet() {
		toSerialize["request"] = o.Request.Get()
	}
	if o.Response.IsSet() {
		toSerialize["response"] = o.Response.Get()
	}
	if o.ResponseStatusCode.IsSet() {
		toSerialize["response_status_code"] = o.ResponseStatusCode.Get()
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableGiftCardRedemptionFailedContext struct {
	value *GiftCardRedemptionFailedContext
	isSet bool
}

func (v NullableGiftCardRedemptionFailedContext) Get() *GiftCardRedemptionFailedContext {
	return v.value
}

func (v *NullableGiftCardRedemptionFailedContext) Set(val *GiftCardRedemptionFailedContext) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardRedemptionFailedContext) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardRedemptionFailedContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardRedemptionFailedContext(val *GiftCardRedemptionFailedContext) *NullableGiftCardRedemptionFailedContext {
	return &NullableGiftCardRedemptionFailedContext{value: val, isSet: true}
}

func (v NullableGiftCardRedemptionFailedContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardRedemptionFailedContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


