/*
Gr4vy API

Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.

API version: 1.1.0-beta
Contact: code@gr4vy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentOptionContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentOptionContext{}

// PaymentOptionContext Additional context specific to the payment option. This is currently only returned for Apple Pay and Google Pay.
type PaymentOptionContext struct {
	// Gateway used for Google Pay payments.
	Gateway *string `json:"gateway,omitempty"`
	// Gateway merchant identifier used for Google Pay payments.
	GatewayMerchantId *string `json:"gateway_merchant_id,omitempty"`
	// Display name of the merchant as registered with the digital wallet provider.
	MerchantName *string `json:"merchant_name,omitempty"`
	// Card schemes supported by the digital wallet provider.
	SupportedSchemes []string `json:"supported_schemes,omitempty"`
	ApprovalUi *PaymentOptionApprovalUI `json:"approval_ui,omitempty"`
	RequiredFields *RequiredFields `json:"required_fields,omitempty"`
}

// NewPaymentOptionContext instantiates a new PaymentOptionContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentOptionContext() *PaymentOptionContext {
	this := PaymentOptionContext{}
	return &this
}

// NewPaymentOptionContextWithDefaults instantiates a new PaymentOptionContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentOptionContextWithDefaults() *PaymentOptionContext {
	this := PaymentOptionContext{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *PaymentOptionContext) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentOptionContext) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *PaymentOptionContext) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *PaymentOptionContext) SetGateway(v string) {
	o.Gateway = &v
}

// GetGatewayMerchantId returns the GatewayMerchantId field value if set, zero value otherwise.
func (o *PaymentOptionContext) GetGatewayMerchantId() string {
	if o == nil || IsNil(o.GatewayMerchantId) {
		var ret string
		return ret
	}
	return *o.GatewayMerchantId
}

// GetGatewayMerchantIdOk returns a tuple with the GatewayMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentOptionContext) GetGatewayMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayMerchantId) {
		return nil, false
	}
	return o.GatewayMerchantId, true
}

// HasGatewayMerchantId returns a boolean if a field has been set.
func (o *PaymentOptionContext) HasGatewayMerchantId() bool {
	if o != nil && !IsNil(o.GatewayMerchantId) {
		return true
	}

	return false
}

// SetGatewayMerchantId gets a reference to the given string and assigns it to the GatewayMerchantId field.
func (o *PaymentOptionContext) SetGatewayMerchantId(v string) {
	o.GatewayMerchantId = &v
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise.
func (o *PaymentOptionContext) GetMerchantName() string {
	if o == nil || IsNil(o.MerchantName) {
		var ret string
		return ret
	}
	return *o.MerchantName
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentOptionContext) GetMerchantNameOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantName) {
		return nil, false
	}
	return o.MerchantName, true
}

// HasMerchantName returns a boolean if a field has been set.
func (o *PaymentOptionContext) HasMerchantName() bool {
	if o != nil && !IsNil(o.MerchantName) {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given string and assigns it to the MerchantName field.
func (o *PaymentOptionContext) SetMerchantName(v string) {
	o.MerchantName = &v
}

// GetSupportedSchemes returns the SupportedSchemes field value if set, zero value otherwise.
func (o *PaymentOptionContext) GetSupportedSchemes() []string {
	if o == nil || IsNil(o.SupportedSchemes) {
		var ret []string
		return ret
	}
	return o.SupportedSchemes
}

// GetSupportedSchemesOk returns a tuple with the SupportedSchemes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentOptionContext) GetSupportedSchemesOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedSchemes) {
		return nil, false
	}
	return o.SupportedSchemes, true
}

// HasSupportedSchemes returns a boolean if a field has been set.
func (o *PaymentOptionContext) HasSupportedSchemes() bool {
	if o != nil && !IsNil(o.SupportedSchemes) {
		return true
	}

	return false
}

// SetSupportedSchemes gets a reference to the given []string and assigns it to the SupportedSchemes field.
func (o *PaymentOptionContext) SetSupportedSchemes(v []string) {
	o.SupportedSchemes = v
}

// GetApprovalUi returns the ApprovalUi field value if set, zero value otherwise.
func (o *PaymentOptionContext) GetApprovalUi() PaymentOptionApprovalUI {
	if o == nil || IsNil(o.ApprovalUi) {
		var ret PaymentOptionApprovalUI
		return ret
	}
	return *o.ApprovalUi
}

// GetApprovalUiOk returns a tuple with the ApprovalUi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentOptionContext) GetApprovalUiOk() (*PaymentOptionApprovalUI, bool) {
	if o == nil || IsNil(o.ApprovalUi) {
		return nil, false
	}
	return o.ApprovalUi, true
}

// HasApprovalUi returns a boolean if a field has been set.
func (o *PaymentOptionContext) HasApprovalUi() bool {
	if o != nil && !IsNil(o.ApprovalUi) {
		return true
	}

	return false
}

// SetApprovalUi gets a reference to the given PaymentOptionApprovalUI and assigns it to the ApprovalUi field.
func (o *PaymentOptionContext) SetApprovalUi(v PaymentOptionApprovalUI) {
	o.ApprovalUi = &v
}

// GetRequiredFields returns the RequiredFields field value if set, zero value otherwise.
func (o *PaymentOptionContext) GetRequiredFields() RequiredFields {
	if o == nil || IsNil(o.RequiredFields) {
		var ret RequiredFields
		return ret
	}
	return *o.RequiredFields
}

// GetRequiredFieldsOk returns a tuple with the RequiredFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentOptionContext) GetRequiredFieldsOk() (*RequiredFields, bool) {
	if o == nil || IsNil(o.RequiredFields) {
		return nil, false
	}
	return o.RequiredFields, true
}

// HasRequiredFields returns a boolean if a field has been set.
func (o *PaymentOptionContext) HasRequiredFields() bool {
	if o != nil && !IsNil(o.RequiredFields) {
		return true
	}

	return false
}

// SetRequiredFields gets a reference to the given RequiredFields and assigns it to the RequiredFields field.
func (o *PaymentOptionContext) SetRequiredFields(v RequiredFields) {
	o.RequiredFields = &v
}

func (o PaymentOptionContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentOptionContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.GatewayMerchantId) {
		toSerialize["gateway_merchant_id"] = o.GatewayMerchantId
	}
	if !IsNil(o.MerchantName) {
		toSerialize["merchant_name"] = o.MerchantName
	}
	if !IsNil(o.SupportedSchemes) {
		toSerialize["supported_schemes"] = o.SupportedSchemes
	}
	if !IsNil(o.ApprovalUi) {
		toSerialize["approval_ui"] = o.ApprovalUi
	}
	if !IsNil(o.RequiredFields) {
		toSerialize["required_fields"] = o.RequiredFields
	}
	return toSerialize, nil
}

type NullablePaymentOptionContext struct {
	value *PaymentOptionContext
	isSet bool
}

func (v NullablePaymentOptionContext) Get() *PaymentOptionContext {
	return v.value
}

func (v *NullablePaymentOptionContext) Set(val *PaymentOptionContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentOptionContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentOptionContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentOptionContext(val *PaymentOptionContext) *NullablePaymentOptionContext {
	return &NullablePaymentOptionContext{value: val, isSet: true}
}

func (v NullablePaymentOptionContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentOptionContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


